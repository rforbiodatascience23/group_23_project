---
title: "04_augment"
author: "Group_23"
format:
  html:
    embed-resources: true
editor: visual
---

# 04. Augment data

```{r}
#| eval: true 
#| message: false
library(tidyverse)
```

##  04.1. Load data from .tsv files

```{r}
prot_clin_cl <- read.delim("../data/02_dat_clean.tsv")
gene_metadata <- read.delim("../data/01_load_gene_metadata.tsv")
```

##  04.2. Data augmentation

### 04.2.1. Add intervals for Age at initial pathological diagnosis

```{r}

# For further analysis, it may be useful to group individuals by age intervals. This will allow us to elucidate if certain aspects regarding breast cancer are related to age. Before deciding on how to define the age intervals, it is useful to look at the age of the youngest and oldest individuals at the initial pathological diagnosis.

# I am writing this here because otherwise I get an error :/
```

```{r}
prot_clin_cl |>
  summarize(
    min_age = min(Age.at.Initial.Pathologic.Diagnosis, na.rm = TRUE),
    max_age = max(Age.at.Initial.Pathologic.Diagnosis, na.rm = TRUE)
  ) 
```

```{r}
# Given the range of ages at the initial pathological diagnosis, we thought of defining the following categories: [30, 40), [40, 50, [50, 60), [60. 70), [70, 80), and [80, 90). As shown in the histogram below, there are individuals for all intervals, even if some are contain far more samples than others.
```

```{r}
ggplot(data = prot_clin_cl,
       mapping = aes(x = Age.at.Initial.Pathologic.Diagnosis)) +
  geom_histogram(bins =5, fill = "cornflowerblue", color = "black", alpha = 0.7) +
  theme_minimal() 
```

Hence, we create a new column that classifies each individual into an age group. With the aim of writing a cleaner code, before adding the new column we rename the column `Age.Ini.Diagnostic.group` as `Age`, but restore the original name once the new variable has been created.

```{r}
prot_clin_cl <- prot_clin_cl |>
  rename(Age = Age.at.Initial.Pathologic.Diagnosis) |>
  mutate(
    Age.Ini.Diagnostic.group = case_when(
      is.na(Age) ~ NA_character_,
      Age < 40 ~ "[30, 40]",
      Age >= 40 & Age < 50 ~ "[40, 50)",
      Age >= 50 & Age < 60 ~ "[50, 60)",
      Age >= 60 & Age < 70 ~ "[60, 70)",
      Age >= 70 & Age < 80 ~ "[70, 80)",
      Age >= 80 & Age < 90 ~ "[80, 90)",
    )
  ) |>
  rename(Age.at.Initial.Pathologic.Diagnosis = Age)
```

### 04.2.2. Targeting Triple-negative breast cancer (TNBC)

Triple-negative breast cancer (TNBC) refers to cancers that lack expression of the estrogen receptor (ER), progesterone receptor (PR), and human epidermal growth factor receptor 2 (HER2). It may be interesting to identify the individuals suffering from TNBC because this type of breast cancer tends to be more aggressive than others and, unlike other breast cancer subtypes, there are no approved targeted treatments available. TFor instance, TNBC are not responsive to hormonal therapy. Thus, treatments may include chemotherapy. Furthermore, even if TNBC tumor cells are sensitive to chemotherapy, early relapse and visceral metastasis are common in this type of breast cancer.

More interesting information, that we can use for the "Analysis" part:

"TNBC is characterized by its unique molecular profile, aggressive behavior, distinct patterns of metastasis, and lack of targeted therapies. Although not synonymous, the majority of triple-negative breast cancers carry the **\"basal-like\"** molecular profile on gene expression arrays. The majority of BRCA1-associated breast cancers are triple-negative and basal-like; the extent to which the BRCA1 pathway contributes to the behavior of sporadic basal-like breast cancers is an area of active research. Epidemiologic studies illustrate a high prevalence of triple-negative breast cancers among **younger** women and those of African descent. Increasing evidence suggests that the risk factor profile differs between this subtype and the more common luminal subtypes. Although sensitive to chemotherapy, early relapse is common and a predilection for visceral metastasis, including brain metastasis, is seen."

Add references :

-    <https://www.uptodate.com/contents/er-pr-negative-her2-negative-triple-negative-breast-cancer/print#:~:text=Triple%2Dnegative%20breast%20cancer%20(TNBC,other%20types%20of%20breast%20cancer.>

-   <https://www.ncbi.nlm.nih.gov/pmc/articles/PMC2868264/>

Thus, we decided to create a new variable to encode individuals as TNBC-positive or TNBC-negative. Before creating the new column, we check how many individuals have missing values for `ER.Status`, `PR.Status`, or `HER2.Final.Status` .

```{r}
prot_clin_cl |>
  filter(is.na(ER.Status) | is.na(PR.Status) | is.na(HER2.Final.Status))
```

The only individuals that have NA values for `ER.Status`, `PR.Status`, or `HER2.Final.Status` are the three healthy individuals. Since they do not suffer from cancer, it would not make sense to impute any value for them, so they will also have NA values for the `TNBC` column.

As done before, the variables are renamed to allow a cleaner code. In this case, they are not restored to their original names, as the new ones are sufficiently informative. In the new column, `TNBC` , individuals with TNBC will store the value "Positive", while the rest will be assigned "Negative".

```{r}
prot_clin_cl <- prot_clin_cl |>
  rename(ER = ER.Status, PR = PR.Status, HER2 = HER2.Final.Status) |>
  mutate(
    TNBC = case_when(
      is.na(ER) | is.na(PR) | is.na(HER2) ~ NA_character_,
      ER == "Negative" & PR == "Negative" & HER2 == "Negative" ~ "Positive",
      TRUE ~ "Negative" # All other cases
    )
  )

```

### 04.2.3. ER/PR/HER2 status

TNBC is a specific case of the ER/PR/HER2 status, in which all of them are negative. However, it might be interesting to study other combinations as well. Therefore, we create a column that provides information about whether the individuals are positive or negative for `ER` , `PR`, and `HER2`.

```{r}
prot_clin_cl <- prot_clin_cl |>
  mutate(
    ER_PR_HER2 = case_when(
      is.na(ER) | is.na(PR) | is.na(HER2) ~ NA_character_,
      ER == "Negative" & PR == "Negative" & HER2 == "Negative" ~ "TNBC",
      ER == "Negative" & PR == "Negative" & HER2 == "Positive" ~ "HER2",
      ER == "Negative" & PR == "Positive" & HER2 == "Negative" ~ "PR",
      ER == "Positive" & PR == "Negative" & HER2 == "Negative" ~ "ER",
      ER == "Positive" & PR == "Positive" & HER2 == "Negative" ~ "ER/PR",
      ER == "Positive" & PR == "Negative" & HER2 == "Positive" ~ "ER/HER2",
      ER == "Negative" & PR == "Positive" & HER2 == "Positive" ~ "PR/HER2",
      ER == "Positive" & PR == "Positive" & HER2 == "Positive" ~ "ER/PR/HER2"
    )
  )
```

### 04.2.4. Simplify AJCC stages 

The American Joint Committee on Cancer (AJCC) for breast cancer is a staging system for classifying the extent of a cancer based on the size of the tumor (T), lymph node involvement (N), and the presence or absence of metastasis (M).

Our data has two columns regarding AJCC, `AJCC.Stage` and `Converted.Stage`, with the latter referring to the translation of information from one edition of the AJCC staging system to another. In order to simplify further analysis and gather all data regarding AJCC into just one column, we will simplify the AJCC stages to I, II, III, and IV. For example, "Stage I", "Stage IA" and "Stage IB" will all be considered "Stage I".

```{r}
prot_clin_cl <- prot_clin_cl |>
  mutate(
    AJCC.Simp = case_when(
      is.na(AJCC.Stage)  ~ NA_character_,
      str_detect(AJCC.Stage, "^Stage IV") ~ "Stage IV",
      str_detect(AJCC.Stage, "^Stage III") ~ "Stage III",
      str_detect(AJCC.Stage, "^Stage II") ~ "Stage II",
      str_detect(AJCC.Stage, "^Stage I") ~ "Stage I"
    )
  )
```

##  04.3. Drop redundant columns

Discuss this.

##  04.4. Save the new data in a .tsv file

```{r}
prot_clin_cl |> 
  write_tsv(file = "../data/03_dat_aug.tsv")
```
